#!/usr/bin/env ys-0

defn main():
  show-missing:
  show-by-hand:
  show-versions:

defn show-missing():
  say: |-
    Check support missing:
    * cabal.mk
    * cursor.mk
    * git.mk
    * graalvm.mk
    * java.mk
    * lein.mk
    * python.mk
    * raku.mk
    * rust.mk
    * zild.mk

parse-re =: qr("(?x)
  [A-Z]+-VERSION\s\?=\s(\d+\..*)\n
  (?s:.*)
  (https://(?:www\.)?github\.com/[-\w]+/[-\w]+)\n
  ")

defn show-versions():
  say:
  say: 'Checking current versions:'

  files =: bash('ls *.mk').out:lines
    .remove(\(_:read.re-find(/www\.github/)))

  files =:
    # reduce _ [] ['go.mk']:
    reduce _ [] files:
      fn(files file):
        _ ver url =:
          file:read =~ parse-re
        if ver:
          then:
            say: "Checking $url"
            new =: bash(url:cmd).out:lines:highest
              .replace(/^(?:v|OTP-)/)
              .replace(/(?:\.ROLLING)$/)
            if new != ver:
              conj files: +[file ver new url]
              else: files
          else: files

  each file files:
    say: format('%-20s  %-10s -> %-10s  %s/tags' file*)

defn show-by-hand():
  files =: bash('ls *.mk').out:lines
    .filter(\(_:read.re-find(qr("https://www\.github\.com/.*")))):sort
    .map(\([_:read.re-find(qr("https://www\.github\.com/.*"))
            _:read.re-find(parse-re).1]))

  say: "\nCheck these by hand:"
  each file files:
    say: format("%-60s - %s" file*)

defn cmd(url): |
  git ls-remote \
      --tags \
      $url | \
    cut -d/ -f3 | \
    grep -E '^([a-z]+-?)?[0-9]+\.[0-9]+\.[0-9]+(\.[0-9]+)?$'
#    grep -E '^(v|go)?[0-9]+\.[0-9]+\.[0-9]+(-[-.0-9a-zA-Z]+)?$'

defn highest(list):
  list .=: map(\(_.replace(/^([a-z]+-?)/)))
  last:
    sort-by _ list:
      fn(v):
        reduce _ "" v.split(/[-.]/):
          fn(w s):
            if s =~ /^\d+$/: +
              "$w-$(format('%05d' s:I))"
              "$w-$s"
